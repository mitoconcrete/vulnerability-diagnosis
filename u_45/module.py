import paramiko

from common.dto import DiagnosisResult
from common.type import DiagnosisCondition
from u_45.enum import DIAGNOSIS_CONDITION, EXECUTE_COMMAND
from common.module import _evaluate_final_result, _get_diagnosis_result, _get_execute_command_result

def diagnosis(client: paramiko.SSHClient, os: str, version: int = -1) -> tuple[bool, list[DiagnosisResult]]:
    commands = _get_execute_commands(os)
    conditions = _get_diagnosis_conditions(os)
    diagnosis_results: list[DiagnosisResult] = []

    for condition in conditions:
        if condition.filepath == "ls -al /usr/bin/su":
            command = f"ls -al {condition.filepath}"
        else:
            command = f"cat {condition.filepath} | grep -i '{condition.target}'"
        result = _get_diagnosis_result(client, command, condition.criterias)
        diagnosis_results.append(result)

    for command in commands:
        result = _get_execute_command_result(client, command)
        diagnosis_results.append(result)

    final_result = _evaluate_final_result(diagnosis_results)
    
    return final_result, diagnosis_results

def _get_diagnosis_conditions(os: str) -> list[DiagnosisCondition]:
    return DIAGNOSIS_CONDITION[os].value

def _get_execute_commands(os: str) -> list[str]:
    return EXECUTE_COMMAND[os].value
