from enum import Enum

from common.enum import DIAGNOSIS_TYPE
from common.type import DiagnosisCondition

class FILEPATH(Enum):
    SOLARIS = ["/etc/group", "/usr/bin/su"]
    LINUX = ["/etc/group", "/etc/pam.d/su", "/usr/bin/su"]
    AIX = ["/etc/group", "/etc/security/user", "/usr/bin/su"]
    HP_UX = ["/etc/group", "/etc/default/security", "/usr/bin/su"]

class EXECUTE_COMMAND(Enum):
    SOLARIS = ["ls -al /usr/bin/su", "chgrp security su", "chmod 4750 su"]
    LINUX = []
    AIX = []
    HP_UX = []

class DIAGNOSIS_CONDITION(Enum):
    LINUX = [
        DiagnosisCondition(
            target="wheel",
            filepath=FILEPATH.LINUX.value[0],
            split=":",
            check_index=0,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="auth required /lib/security/pam_wheel.so debug group",
            filepath=FILEPATH.LINUX.value[1],
            split=" = ",
            check_index=-1,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="auth required /lib/security/$ISA/pam_wheel.so use_id",
            filepath=FILEPATH.LINUX.value[1],
            split="",
            check_index=-1,
            criterias=["== 'auth required /lib/security/$ISA/pam_wheel.so use_id'"]
        ),
        DiagnosisCondition(
            target="sugroup",
            filepath=FILEPATH.LINUX.value[2],
            split=" = ",
            check_index=-1,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="-rwsr-x---'",
            filepath=FILEPATH.LINUX.value[2],
            split=" ",
            check_index=0,
            criterias=["== '-rwsr-x---'"]
        )
    ]

    SOLARIS = [
        DiagnosisCondition(
            target="wheel",
            filepath=FILEPATH.SOLARIS.value[0],
            split=":",
            check_index=0,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="-rwsr-x---'",
            filepath=FILEPATH.SOLARIS.value[1],
            split=" ",
            check_index=0,
            criterias=["== '-rwsr-x---'"]
        )
    ]

    AIX = [
        DiagnosisCondition(
            target="wheel",
            filepath=FILEPATH.AIX.value[0],
            split=":",
            check_index=0,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="sugroup",
            filepath=FILEPATH.AIX.value[1],
            split=" = ",
            check_index=-1,
            criterias=["== 'staff'"]
        ),
        DiagnosisCondition(
            target="-rwsr-x---'",
            filepath=FILEPATH.AIX.value[2],
            split=" ",
            check_index=0,
            criterias=["== '-rwsr-x---'"]
        )
    ]

    HP_UX = [
        DiagnosisCondition(
            target="wheel",
            filepath=FILEPATH.HP_UX.value[0],
            split=":",
            check_index=0,
            criterias=["== 'wheel'"]
        ),
        DiagnosisCondition(
            target="SU_ROOT_GROUP",
            filepath=FILEPATH.HP_UX.value[1],
            split=" = ",
            check_index=-1,
            criterias=["== 'staff'"]
        ),
        DiagnosisCondition(
            target="-rwsr-x---'",
            filepath=FILEPATH.HP_UX.value[2],
            split=" ",
            check_index=0,
            criterias=["== '-rwsr-x---'"]
        )
    ]