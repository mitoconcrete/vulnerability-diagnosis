from enum import Enum

from common.type import DiagnosisCondition

class FILEPATH(Enum):
    SOLARIS = ["/etc/passwd"]
    INUX = ["/etc/pam.d/system-auth"]
    AIX = ["/etc/security/user"]
    HP_UX = ["/etc/passwd"]
    LINUX = ["/etc/security/pwquality.conf"]


class DIAGNOSIS_CONDITION(Enum):
    LINUX = [
        DiagnosisCondition(
            target="lcredit",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1","== -1"]
        ),
        DiagnosisCondition(
            target="ucredit",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1","== -1"]
        ),
        DiagnosisCondition(
            target="dcredit",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1","== -1"]
        ),
        DiagnosisCondition(
            target="ocredit",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1","== -1"]
        ),
        DiagnosisCondition(
            target="minlen",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 8","== -1"]
        ),
        DiagnosisCondition(
            target="dcredit",
            filepath=FILEPATH.LINUX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1","== -1"]
        ),
    ]
    SOLARIS = [
        DiagnosisCondition(
            target="HISTORY",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 10"]
        ),
        DiagnosisCondition(
            target="MINDIFF",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 4"]
        ),
        DiagnosisCondition(
            target="MINALPHA",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="MINNONALPHA",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="MINUPPER",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="MINLOWER",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="MAXREPEATS",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 0"]
        ),
        DiagnosisCondition(
            target="MINSPECIAL",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="MINDIGIT",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="NAMECHECK",
            filepath=FILEPATH.SOLARIS.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 'YES'"]
        ),
    ]
    AIX = [
        DiagnosisCondition(
            target="dictionlist",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== '/usr/share/dict/words'"]
        ),
        DiagnosisCondition(
            target="histexpire",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 26"]
        ),
        DiagnosisCondition(
            target="histsize",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 10"]
        ),
        DiagnosisCondition(
            target="maxrepeats",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 2"]
        ),
        DiagnosisCondition(
            target="minalpha",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 2"]
        ),
        DiagnosisCondition(
            target="minother",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 2"]
        ),
        DiagnosisCondition(
            target="mindiff",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 4"]
        ),
        DiagnosisCondition(
            target="minlen",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 8"]
        ),
        DiagnosisCondition(
            target="mindiff",
            filepath=FILEPATH.AIX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 4"]
        ),
    ]
    HP_UX = [
        DiagnosisCondition(
            target="MIN_PASSWORD_LENGTH",
            filepath=FILEPATH.HP_UX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 8"]
        ),
        DiagnosisCondition(
            target="PASSWORD_MIN_UPPER_CASE_CHARS",
            filepath=FILEPATH.HP_UX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="PASSWORD_MIN_LOWER_CASE_CHARS",
            filepath=FILEPATH.HP_UX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="PASSWORD_MIN_DIGIT_CHARS",
            filepath=FILEPATH.HP_UX.value[0],
            split=" = ",
            check_index=-1,
            criterias=[">= 1"]
        ),
        DiagnosisCondition(
            target="PASSWORD_MIN_SPECIAL_CHARS",
            filepath=FILEPATH.HP_UX.value[0],
            split=" = ",
            check_index=-1,
            criterias=["== 1"]
        )
    ] 